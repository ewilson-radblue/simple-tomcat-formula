#!/bin/bash
#
### BEGIN INIT INFO
# Provides: tomcat-{{ i_name }}
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop:
# Description: Release implementation for Servlet 2.5 and JSP 2.1
# Short-Description: start and stop tomcat
### END INIT INFO
#
# Initially forked from: https://gist.github.com/valotas/1000094
# @author: Miglen Evlogiev <bash@miglen.com>
#
# Source: https://gist.github.com/cooniur/048460717505359def2a
#

##Location of JAVA_HOME (the directory contains bin folder)
#export JAVA_HOME=/usr/lib/jvm/default
#
##Add Java binary files to PATH
#export PATH=$JAVA_HOME/bin:$PATH

#TOMCAT_ID is the ID of the tomcat instance
export TOMCAT_ID={{ i_name }}

#CATALINA_HOME is the location of the bin files of Tomcat
export CATALINA_HOME=/srv/tomcat/${TOMCAT_ID}/current

#CATALINA_BASE is the location of the configuration files of this instance of Tomcat
export CATALINA_BASE=$CATALINA_HOME

#TOMCAT_USER is the default user of tomcat
export TOMCAT_USER=tomcat

#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {start|stop|kill|status|restart}"

#STARTUP_WAIT is wait time in seconds for java proccess to start
STARTUP_WAIT=10

#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=30

tomcat_pid() {
  pgrep -f $CATALINA_BASE
}

start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then
    echo -e "Tomcat instance ${TOMCAT_ID} is already running (pid: $pid)"
  else
    echo -e "Starting tomcat instance ${TOMCAT_ID}"
    umask 007

    /bin/su $TOMCAT_USER -s /bin/sh -c $CATALINA_HOME/bin/startup.sh

    pid=$(tomcat_pid)
    echo -n -e "\nwaiting ${STARTUP_WAIT} seconds for processes to get ready.."
    sleep ${STARTUP_WAIT}

    status
  fi
  return 0
}

status(){
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then
    echo -e "Tomcat instance ${TOMCAT_ID} is running with pid: $pid"
  else
    echo -e "Tomcat instance ${TOMCAT_ID} is not running"
    exit 1
  fi
}

terminate() {
  kill -9 $(tomcat_pid)
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then
    echo -e "Stopping Tomcat instance ${TOMCAT_ID}"
    sh $CATALINA_HOME/bin/shutdown.sh
    echo -n -e "\nwaiting ${SHUTDOWN_WAIT} seconds for processes to exit.."

    let kwait=$SHUTDOWN_WAIT
    count=0;
    while [ -n "$(tomcat_pid)" ] && [ $count -le $kwait ]; do
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes didn't stop after $SHUTDOWN_WAIT seconds, terminating.."
      terminate
    fi
  else
    echo -e "Tomcat instance ${TOMCAT_ID} is not running"
  fi

  return 0
}

case $1 in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  kill)
    terminate
  ;;
  *)
    echo -e $TOMCAT_USAGE
  ;;
esac

exit 0
